name: Build and Test Device Manager

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os_arch:
          [
            { os: windows-2022, arch: x64 },
            { os: macos-15, arch: arm64 },
            { os: macos-15, arch: x64 },
            { os: ubuntu-24.04, arch: x64 },
          ]

    runs-on: ${{ matrix.os_arch.os }}

    steps:
      - name: Install build system (ubuntu)
        if: matrix.os_arch.os == 'ubuntu-24.04'
        run: |
          sudo apt-get install -y pipx
          pipx install conan ninja

      - name: Install build system (windows-2022, macos-15)
        if: matrix.os_arch.os == 'windows-2022' || matrix.os_arch.os == 'macos-15'
        run: pip install conan ninja

      - name: conan cache
        id: conan_cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}-conan

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Compiler (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os_arch.os == 'windows-2022'

      - name: Setup Compiler (MacOS)
        if: matrix.os_arch.os == 'macos-15'
        run: |
          echo "CC=$(brew --prefix llvm@18)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@18)/bin/clang++" >> $GITHUB_ENV

      - name: Conan create and test package 
        run: |
          conan config install .github/conan_profiles/${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }} -tf profiles
          conan create . --profile:all ${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }} -s build_type=Release --build=missing

