name: Build and Test Device Manager

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-2022
            arch: x64
            base_name: windows-x86_64
          - os: ubuntu-22.04
            arch: x64
            base_name: linux-x86_64
          - os: ubuntu-24.04
            arch: x64
            base_name: linux-x86_64
          - os: macos-15
            arch: arm64
            base_name: macos-armv8
          - os: macos-15
            arch: x64
            base_name: macos-x86_64


    runs-on: ${{ matrix.os }}

    steps:
      - name: Install build system
        run: pipx install conan ninja

      - name: conan cache
        id: conan_cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ matrix.os }}-${{ matrix.arch }}-conan

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Compiler (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-2022'

      - name: Setup Compiler (MacOS)
        if: matrix.os == 'macos-15'
        run: |
          echo "CC=$(brew --prefix llvm@18)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@18)/bin/clang++" >> $GITHUB_ENV

      - name: Setup Compiler (Ubuntu 22)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update -y
          sudo apt-get install gcc-13 g++-13 -y
          echo "CC=gcc-13" >> $GITHUB_ENV
          echo "CXX=g++-13" >> $GITHUB_ENV

      - name: Conan create and test package 
        run: |
          conan config install .github/conan_profiles/${{ matrix.os }}-${{ matrix.arch }} -tf profiles
          conan create . --profile:all ${{ matrix.os }}-${{ matrix.arch }} -s build_type=Release --build=missing

